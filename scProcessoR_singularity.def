Bootstrap: docker
From: r-base@sha256:0563681bc4b3a1ad6faaa767f8e8b0c2bfb818f921840c032fc9510058b345bb
Stage: build

%files
    #Files are copied from host system to container
    ./scProcessoR_v2 ./scProcessoR/Programs/scProcessoR_v2

%environment
    #define environment variables that should be available inside the container    
    
    export HOME=/
    export DIR_SCPROCESSOR=/scProcessoR/Programs
    export DIR_SCPROCESSOR_RUN=${DIR_SCPROCESSOR}/scProcessoR_v2
    export DIR_WORKING=/mnt/outdir
    
%post
    #install new software and libraries, write configuration files, create new directories, etc
    
    cd $DIR_SCPROCESSOR
    
    apt-get update
    
    apt-get install -y libmagick++-dev
    apt-get install -y libcurl4-openssl-dev
    apt-get install -y libssl-dev
    apt-get install -y libfontconfig1-dev
    apt-get install -y libharfbuzz-dev libfribidi-dev
    apt-get install -y libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
    apt-get install -y libxml2-dev
    apt-get install -y libgtk2.0-dev libcairo2-dev xvfb xauth xfonts-base
    apt-get install -y libx11-dev
    apt-get install -y libxt-dev
    apt-get install -y libudunits2-dev
    apt-get install -y libhdf5-dev
    apt-get install -y libgsl-dev
    apt-get install -y libmariadb-dev
    apt-get install -y libgeos-dev
    apt-get install -y libpq-dev
    
    apt-get install -y libfftw3-dev libtiff5-dev
    apt-get install -y libgdal-dev
    apt-get install -y libgmp-dev
    
    

    Rscript -e "install.packages('renv', repos='http://cran.us.r-project.org')"
    
    Rscript -e "install.packages('devtools', repos='http://cran.us.r-project.org')"
    Rscript -e "install.packages('BiocManager', repos='http://cran.us.r-project.org', dependencies = FALSE)" 
    
    
    
    Rscript -e "BiocManager::install(c(
        'multtest'),
        dependencies = TRUE
    )"
    
    Rscript -e "devtools::install_github('mojaveazure/seurat-disk')"
    
    
    Rscript -e "install.packages(c(
        'tidyr', 
        'tibble', 
        'Matrix', 
        'dplyr', 
        'future', 
        'ggplot2', 
        'cowplot', 
        'Cairo',
        'openxlsx', 
        'readxl', 
        'jsonlite', 
        'Seurat',
        'harmony',
        'symphony',
        'patchwork', 
        'DescTools',
        'ggrastr',
        'modules',
        'hdf5r'
        ), 
        repos='http://cran.us.r-project.org', 
        dependencies = TRUE
    )"
 
    Rscript -e "BiocManager::install(c(
        'scater',
        'scDblFinder',
        'SingleCellExperiment',
        'scran'),
        dependencies = TRUE
    )"
    
    Rscript -e "devtools::install_github('navinlabcode/copykat')"
    Rscript -e "devtools::install_github('theislab/kBET')"
    
    
    
%test
    #Provide possibility to test that the container is running as intended

%apphelp QC

    ## scProcessoR_QC #####################################################################################################
    #######################################################################################################################

    1. Remove low quality cells
    2. Remove doublets
    3. Calculate batch effect
    4. Navigate to folder containing seurat object to process and execute scProcessoR_QC

    Run as "singularity run --bind <YOUR-OUTPUT-DIR>:/mnt/outdir --app QC scProcessoR.sif"
    The <YOUR-OUTPUT-DIR> directory needs to contain the .json-file as 
    specified in the main help section ("singularity scProcessoR.sif -h"). If the directory does not yet contain the .json
    file it will be created in the folder with default settings. Please check the parameters written in this file, as the default values might not be valid for your data and lead to errors in processing or breaking of the pipeline.
    
    After the run you should double check cutoffs, doublet scores and batch effect in folders QC/ and Integrate/.
    If changes should be made you can add them to the data.json and rerun QC.

    #######################################################################################################################

%apprun QC
    
    cd $DIR_WORKING
    Rscript ${DIR_SCPROCESSOR_RUN}/scProcessoR_QC.R


%apphelp scProcessoR_Annotate

    ## scProcessoR_Annotate ###############################################################################################
    #######################################################################################################################

    1. Batch integration
    2. Clustering
    3. Atlas mapping
    4. CNA calling

    Run as "singularity run --bind <YOUR-OUTPUT-DIR>:/mnt/outdir --app Annotate scProcessoR.sif"
    The output directory needs to contain the .json-file as 
    specified in the main help section ("singularity scProcessoR.sif -h")
    
    
    
    To refine cell annnotations manually.
    
    Check plots in Annotation/ to double check cluster annotation and in copykat/ to double check if aneuploid cells 
    are also epithelial. Add your own annotation in annotation.xlsx to the working folder and rerun Annotate.

    #######################################################################################################################

%apprun Annotate

    cd $DIR_WORKING
    Rscript ${DIR_SCPROCESSOR_RUN}/scProcessoR_Annotate.R
    

%help
    
    Automated analysis of scRNA-seq

    Steps:

        - Quality control and doublet detection
        - Measure and correct batch effect through (Harmony)[https://github.com/immunogenomics/harmony]
        - Atlas mapping and annotation through (Symphony)[https://github.com/immunogenomics/symphony]
        - Identify tumor cells with CNA calling through (copyKat)[https://github.com/navinlabcode/copykat]
        - Differential expression and fraction analysis (in development)
        - Universal output files through (SeuratDisk)[https://github.com/mojaveazure/seurat-disk] (in development)
        
    To run the whole pipeline execute these apps sequentially:
    
        1. [QC]          singularity run --bind <YOUR-OUTPUT-DIR>:/mnt/outdir --app QC scProcessoR.sif
        2. [Annotate]    singularity run --bind <YOUR-OUTPUT-DIR>:/mnt/outdir --app Annotate scProcessoR.sif
        
        To refine annotation manually check the help section of Annotate. 

    Further help for individual apps via "singularity run-help --app <AppName> scProcessoR.sif".
        
        
    Before starting a .json file has to be speciefied and put into the desired output directory:
    
        - scProcessor works without arguments to the Rscripts, therefore it needs an input file that specifies these variables. 
          This is automatically generated when running QC for the first time and has to be reviewed to make sure scProcessor_v2 processes the data how you want.
          Run "singularity run --bind <YOUR-OUTPUT-DIR>:/mnt/outdir --app CheckSeurat scProcessoR.sif". The <YOUR-OUTPUT-DIR> needs to contain a single .rds-file containing a seurat object.
    
        - Here is an overview of the data.json (NA in a json is indicated as null)
            * object_path: full path where seurat object is stored
            * batch_var: Batch variable to integrate on e.g. patient
            * batch_run: Batch variable that defines different runs e.g. sample
            * norm: boolean indicating if data is already normalized e.g. false
            * QC_feature_min: threshold for minimal number of detected genes per cell e.g. 250
            * QC_mt_max: threshold for maximal percentage of mitochondrial reads per cell e.g. 20
            * pca_dims: number of PCA dimensions to take for further processing e.g. 30
            * features_var: number of highly variable features to take for further processing e.g. 2000
            * nSample: number of cells to take for intense computing steps e.g. 50000
            * cluster_resolution: a sequence of different cluster resolutions, scProcessor will select the most optimal resolution e.g. 0.3, 0.5, 1
            * malignant: boolean indicating if maligant cell prediction is necessary e.g. TRUE
            * normal_cells: cell type taken as normal cells to increase confidence of malingant cell prediction e.g. null (standard Macrophages are taken), false (no normal cells taken)
            * annotation: columns in meta.data that contains annotation information
            * metadata: other important columns contained in the meta.data slot e.g. biopsy, sample_id, treatment ...
            
            
#######################################################################################################################


%labels
    Author timo.trefzer@bayer.com
    Version v0.0.1
    

#Checks
## CheckSeurat
### Multiple seurat files
### name of seurat file
## QC
### Valid json file